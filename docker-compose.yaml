version: "2"

services:
  kaufmann:
    build:
      context: .
    environment: 
      KAFKA_HOST: kafka
      KAFKA_TOPIC: rapids
      CONSUMER_GROUP: test-consumer-group
      SCHEMA_REGISTRY_PATH: http://schema_registry:8081/
      SERVICE_NAME: TEST
      HOST_NAME: docker-compose-test
    depends_on: 
      - kafka
      - schema_registry
    volumes:
      - .:/app/kaufmann
    command: ["/bin/bash"]

  etcd:
    image: quay.io/coreos/etcd
    hostname: etcd
    ports:
      - "2379:2379"
      - "2380:2380"
    entrypoint: /usr/local/bin/etcd 
    environment: 
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_ADVERTISE_CLIENT_URLS: http://0.0.0.0:2379 
      ETCD_LISTEN_PEER_URLS:  http://0.0.0.0:2380 
      ETCD_INITIAL_CLUSTER: default=http://0.0.0.0:2380
      ETCD_INITIAL_ADVERTISE_PEER_URLS: http://0.0.0.0:2380 

  zetcd: 
    image: quay.io/coreos/zetcd
    hostname: zetcd
    ports:
      - "2181:2181"
    depends_on:
      - etcd
    entrypoint: ["/usr/local/bin/zetcd", "-zkaddr", "0.0.0.0:2181", "-endpoints", "etcd:2379", "-logtostderr", "-v", "1"]

  kafka:
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_ZOOKEEPER_CONNECT: zetcd:2181
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "rapids:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zetcd

  schema_registry:
    image: confluentinc/cp-schema-registry
    depends_on:
      - zetcd
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zetcd:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

